<?xml version="1.0" encoding="UTF-8"?>
<!-- configuration file for LogBack (slf4J implementation)
See here for more details: http://gordondickens.com/wordpress/2013/03/27/sawing-through-the-java-loggers/ -->
<configuration scan="true" scanPeriod="30 seconds">

  <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
    <resetJUL>true</resetJUL>
  </contextListener>

  <property name="LOG_HOME" value="/logs" />
  <property name="DETAILED_PATTERN" value="|%d{yy-MM-dd HH:mm:ss.SSS}| %-5level [%thread] %logger{30} GUID:%X{user.guid:-N/A} LOCALID:%X{user.localid:-N/A} CODE:%X{user.code:-N/A} SESSION:%X{user.sessionid:-N/A} %msg%n{}" />
  <property name="DEFAULT_PATTERN" value="|%d{yy-MM-dd HH:mm:ss.SSS}| %-5level [%thread] %logger{30} %msg%n{}" />

  <!-- To enable JMX Management -->
  <jmxConfigurator/>

  <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>INFO</level>
    </filter>
    <encoder>
      <pattern>${DEFAULT_PATTERN}</pattern>
    </encoder>
  </appender>

  <!-- 全量日志 -->
  <appender name="ALL" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_HOME}/all.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!--日志文件输出的文件名-->
      <fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}_all.log</fileNamePattern>
      <maxHistory>60</maxHistory>
    </rollingPolicy>
    <encoder>
      <!--格式化输出：%d表示日期，%thread表示线程名，%level 等级 %msg：日志消息，%n是换行符-->
      <pattern>${DETAILED_PATTERN}</pattern>
    </encoder>
    <!--日志文件最大的大小-->
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <maxFileSize>10MB</maxFileSize>
    </triggeringPolicy>
  </appender>

  <!-- 按照每天生成日志文件 -->
  <appender name="DebugFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_HOME}/debug.log</file>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>DEBUG</level>
    </filter>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>WARN</level>
      <onMatch>DENY</onMatch>
      <onMismatch>NEUTRAL</onMismatch>
    </filter>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>ERROR</level>
      <onMatch>DENY</onMatch>
      <onMismatch>NEUTRAL</onMismatch>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!--日志文件输出的文件名-->
      <fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}_debug.log</fileNamePattern>
      <maxHistory>60</maxHistory>
    </rollingPolicy>
    <encoder>
      <!--格式化输出：%d表示日期，%thread表示线程名，%level 等级 %msg：日志消息，%n是换行符-->
      <pattern>${DEFAULT_PATTERN}</pattern>
    </encoder>
    <!--日志文件最大的大小-->
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <maxFileSize>10MB</maxFileSize>
    </triggeringPolicy>
  </appender>

  <appender name="InfoFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_HOME}/info.log</file>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>INFO</level>
    </filter>

    <!-- 可让每天产生一个日志文件，最多 10 个，自动回滚 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}_info.log</fileNamePattern>
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <layout class="ch.qos.logback.classic.PatternLayout" charset="UTF-8">
      <!--格式化输出：%d表示日期，%thread表示线程名，%level 等级 %msg：日志消息，%n是换行符-->
      <pattern>${DEFAULT_PATTERN}</pattern>
    </layout>
    <!--日志文件最大的大小-->
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <maxFileSize>10MB</maxFileSize>
    </triggeringPolicy>
  </appender>

  <!-- 按照每天生成日志文件 -->
  <appender name="ErrorFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_HOME}/error.log</file>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>ERROR</level>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!--日志文件输出的文件名-->
      <fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}_error.log</fileNamePattern>
      <maxHistory>10</maxHistory>
    </rollingPolicy>
    <encoder>
      <!--格式化输出：%d表示日期，%thread表示线程名，%level 等级 %msg：日志消息，%n是换行符-->
      <pattern>${DETAILED_PATTERN}STACKTRACE ATTACHED:%n%xEx</pattern>
    </encoder>
    <!--日志文件最大的大小-->
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <maxFileSize>10MB</maxFileSize>
    </triggeringPolicy>
  </appender>

  <appender name="MonitorFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_HOME}/monitor.log</file>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>INFO</level>
    </filter>

    <!-- 可让每天产生一个日志文件，最多 10 个，自动回滚 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}_monitor.log</fileNamePattern>
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <encoder>
      <!--格式化输出：%d表示日期，%thread表示线程名，%level 等级 %msg：日志消息，%n是换行符-->
      <pattern>${DEFAULT_PATTERN}</pattern>
    </encoder>
    <!--日志文件最大的大小-->
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <maxFileSize>10MB</maxFileSize>
    </triggeringPolicy>
  </appender>

  <!-- 输出到控制台和文件，可定义更多的 Appender -->
  <root>
    <level value="INFO" />
    <appender-ref ref="DebugFile" />
    <appender-ref ref="ErrorFile" />
    <appender-ref ref="InfoFile" />
    <appender-ref ref="ALL" />
  </root>

  <!-- 下面配置一些第三方包的日志过滤级别，用于避免刷屏 -->
  <logger name="org" level="WARN" />
  <logger name="com.mchange.v2" level="WARN" />
  <logger name="ch.qos.logback" level="WARN" />
  <logger name="org.hibernate" level="WARN" />
  <logger name="com.sun.xml.internal" level="WARN" />
  <logger name="druid" level="INFO"/>

  <logger name="com.sysjj.monitor" level="DEBUG" additivity="false">
    <appender-ref ref="MonitorFile" />
  </logger>

</configuration>
